#
    bakwan.singkong
    
    part of Bakwan: simple accounting software
    
    Authors:
    Noprianto (nop@noprianto.com)
    Budiman (Budyzhang778@gmail.com)
;

require(9.6)
load_module("ui_util")

load_file_or_resource("account.singkong")
load_file_or_resource("system.singkong")
load_file_or_resource("ui.singkong")
load_file_or_resource("setup.singkong")
load_file_or_resource("message.singkong")
load_file_or_resource("config.singkong")
load_file_or_resource("about.singkong")
load_file_or_resource("dashboard.singkong")
load_file_or_resource("contact.singkong")
load_file_or_resource("product.singkong")

var app_name = "Bakwan"
var app_conf = "bakwan.properties"

var _select = "select"
var _insert = "insert"
var _update = "update"
var _delete = "delete"

reset()
title(app_name)
var s = screen()
size(s[0] * 0.9, s[1] * 0.9)
show()

var frame_info = frame()
var ctx = {
    "name": app_name,
    "authors": [
        ["Noprianto", "nop@noprianto.com"],
        ["Budiman", "Budyzhang778@gmail.com"]
    ],

    "conf_path": userhome() + separator() + app_conf,

    "db": null,
    "db_type": "",
    "db_host": "",
    "db_user": "",
    "db_name": "",

    "user": null,
    "user_id": null,
    "group_id": null,
    "permission": null,
    
    "dialog_width": 400,
    "dialog_height": 240,
    "dialog_width_2": frame_info[0] * 0.8,
    "dialog_height_2": frame_info[1] * 0.8,    

    "lock": [],
    "progress": null,
    "tab": null
}

var app_menu = fn(ctx) { 
    return [
        [_("menu_file"), _m("menu_file"), 
            [
                [
                    _("menu_settings"),
                    _m("menu_settings"), 
                    true,
                    fn() {
                        var r = setup_form(ctx)
                    }  
                ],
                [],
                [
                    _("menu_quit"),
                    _m("menu_quit"),
                    true,
                    fn() {
                        frame_close()
                    }
                ]
            ]
        ],
        [_("menu_help"), _m("menu_help"),
            [ 
                [
                    _("menu_about"), 
                    _m("menu_about"), 
                    true, 
                    fn() {
                        var r = about_form(ctx)
                    }
                ]
            ]
        ]
    ]
}

var init_ui = fn(ctx) {
    closing(_("confirm_quit"), _("title_confirm"))

    var status_db = upper(_("_db_connected"), true) + " " + 
        "(" + ctx["db_type"] + ")"
    statusbar(0, status_db, true)
    statusbar(1, ctx["db_name"], true)
    statusbar(2, ctx["user"], true)
    timer(1000, fn() {
        statusbar(3, string(@), true)
    })
    set(ctx, "progress", component("progress", ""))
    config(ctx["progress"], "active", true)

    menubar(app_menu(ctx))

    var tab_main = component("tab", "")
    set(ctx, "tab", tab_main)

    tab_add(tab_main, dashboard_form(ctx))

    if (contact_privileges(ctx)[_select]) {
        tab_add(tab_main, contact_form(ctx))
    }
    if (product_privileges(ctx)[_select]) {
        tab_add(tab_main, product_form(ctx))
    }
    add(tab_main)
}

var disable_tab = fn() {
    config(ctx["tab"], "enabled", false)
}

var enable_tab = fn() {
    config(ctx["tab"], "enabled", true)
}

var show_progress = fn(data) {
    var td = data[1]
    var tp = td + " " + _("ms")

    config(ctx["progress"], "text", tp)
    statusbar(7, ctx["progress"], true)
}

var show_progress_done = fn(data) {
    statusbar(7, "", true)
    enable_tab()
}

var conf = system_read_config(ctx)
var conf_status = repeat {
    if (empty(conf)) {
        var r = config_form(ctx)
        if (r["config"] == true | r["command"] == "close") {
            var conf = system_read_config(ctx)
            return r
        }
    } else {
        return true
    }
}

if (empty(conf)) {
    frame_close()
} else {
    var db = system_get_db(ctx)
    if (db == null) {
        var n = join(lf(), system_get_db_info(ctx, false))
        var m = _("error_db_connect") + lf() + n + lf() + _("confirm_config_reset")
        var r = confirm(m, _("title_confirm"))
        if (r == "OK") {
            if (properties_write(ctx["conf_path"], {})) {
                message(_("info_app_restart"), _("title_info"))
            } else {
                message(_("error_config_write"), _("title_error"))
            }
        }
        frame_close()
    } else {
        set(ctx, "db", db)
        set(ctx, "db_type", conf["db_type"])
        set(ctx, "db_host", conf["db_host"])
        set(ctx, "db_name", conf["db_name"])
        set(ctx, "db_user", conf["db_user"])

        if (system_is_new(ctx)) {
            var r = system_init_db(ctx)
            if (r == null) {
                message(_("error_db_init"), _("title_error"))
                frame_close()
            } else {
                message(
                    _("success_db_init") + lf() +
                    _("info_app_user") + ": " + lf() +
                    upper(_("_username"), true) + ": " + 
                    system_default_user + lf() +
                    upper(_("_password"), true) + ": " + 
                    system_default_password + lf(),
                    _("title_info")
                )
            }
        }

        var r_upg = system_upgrade_db(ctx)
        if (r_upg == null) {
            message(_("error_db_upgrade"), _("title_error"))
            frame_close()
        } else {
            if (r_upg == true) {
                message(
                    _("success_db_upgrade"),
                    _("title_info")
                )
            }
        }

        var r_auth = repeat {
            if (r_upg == null) {
                return []
            }
            var r = login_dialog(
                _("title_login"),
                upper(_("_username"), true),
                upper(_("_password"), true)
            )
            if (len(r) > 1) {
                var u = r[0]
                var p = r[1]
                var r_auth = system_auth(ctx, u, p)
                if (len(r_auth) == 3) {
                    return r_auth
                } else {
                    message(
                        _("error_auth"),
                        _("title_info")
                    )
                }
            } else {
                return []
            }
        }
        if (len(r_auth) == 3) {
            set(ctx, "user_id", r_auth[0])
            set(ctx, "group_id", r_auth[1])
            set(ctx, "user", r_auth[2])
            init_ui(ctx)
        } else {
            frame_close()
        }
    }
}
