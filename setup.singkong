#
    setup.singkong
    Account setup
    part of Bakwan: simple accounting software
    
    Authors:
    Noprianto (nop@noprianto.com)
;

load_module("ui_calendar")

var setup_default_fiscal_start = fn() {
    var n = part(@)
    return [
        n[0],
        1,
        format_date(date([n[0], 1, 1]))
    ]
}

var setup_default_fiscal_end = fn() {
    var n = part(@)
    var z = len(days_of_month(n[0], 12))
    return [
        n[0],
        12,
        format_date(date([n[0], 12, z]))
    ]
}

var setup_load_coa = fn(ctx, tbl) {
    var db = ctx["db"]
    if (db == null) {
        message(_("error_db_connect"), _("title_error"))
        return null
    }
    var dt = ctx["db_type"]

    var r = null
    var d = []
    if (in(system_db_types_derby, dt)) {
        var r = db_select_derby(db, "account_coa", ["account_coa_id", "account_type", "code", "description"], [], ["account_type asc", "code asc"], null, null)
    }
    if (dt == system_db_types_pg) {
        var r = db_select_postgresql(db, "account_coa", ["account_coa_id", "account_type", "code", "description"], [], ["account_type asc", "code asc"], null, null)
    }
    if (r != null) {
        var d = r[0]
        each(d, fn(e, i) {
            set(e, 1, account_types_code_r[e[1]])
        })
    }

    config(tbl, "contents", d)
}

var setup_is_coa_exists = fn(ctx, h) {
    var c = h["code"]
    if (c != null) {
        var r = db_query_single(db, 
            "select account_coa_id from account_coa where code=?",
            [c]
        )
        if (r != null) {
            var r = r[0]
            if (empty(r)) {
                return false
            }
        } else {
            return null
        }
    }
    return true
}

var setup_create_coa = fn(ctx, h) {
    var db = ctx["db"]
    if (db == null) {
        message(_("error_db_connect"), _("title_error"))
        return null
    }
    
    var t = setup_is_coa_exists(ctx, h)
    if (t) {
        message(_("error_account_code_exists"), _("title_error"))
    } else {
        var r = db_insert(db, "account_coa", h)
        return r
    }
    return null
}

var setup_delete_coa = fn(ctx, h) {
    var db = ctx["db"]
    if (db == null) {
        message(_("error_db_connect"), _("title_error"))
        return null
    }

    var r = db_delete(db, "account_coa", h)
    return r
}

var setup_update_coa = fn(ctx, h1, h2) {
    var db = ctx["db"]
    if (db == null) {
        message(_("error_db_connect"), _("title_error"))
        return null
    }

    var r = db_update(db, "account_coa", h1, h2)
    return r
}

var setup_set_account_code = fn(cmb, msk) {
    var c = get(cmb, "text")
    var m = get(msk, "contents")
    if (endswith(m, "_")) {
        var code = account_types_code[c]
        config(msk, "contents", code)
    }
}

var setup_account_dialog = fn(ctx, edit) {
    var cmb_type = component("combobox", account_types_)
    ui_d_cmb_border(cmb_type, _u("_account_type"))
    var msk_code = component("mask", account_mask)
    config(msk_code, "border", _u("_code"))
    config(msk_code, "align", 2)
    var txt_desc = component("text", "")
    config(txt_desc, "border", _u("_description"))
    var btn_rst = ui_c_btn_(_("cmd_reset"), 2, _m("cmd_reset"))
    var g = component("grid", "")
    ui_d_grid(g)
    grid_add(g, cmb_type, 0, 0, 1, 1, 1, 0, 1, 1)
    grid_add(g, msk_code, 1, 0, 1, 1, 0.5, 0, 1, 1)
    grid_add(g, btn_rst, 2, 0, 1, 1, 0, 0, 0, 1)
    grid_add(g, txt_desc, 0, 1, 3, 1, 1, 0, 1, 1)

    setup_set_account_code(cmb_type, msk_code)
    event(cmb_type, fn() {
        setup_set_account_code(cmb_type, msk_code)
    })    

    event(btn_rst, fn() {
        config(msk_code, "contents", "")
    })

    if (!empty(edit)) {
        var a_type = edit["_account_type"]
        var a_code = edit["_code"]
        var a_desc = edit["_description"]
        config(cmb_type, "text", a_type)
        config(msk_code, "contents", a_code)
        config(txt_desc, "contents", a_desc)
    }

    return [g, cmb_type, msk_code, txt_desc]
}

var setup_form = fn(ctx) {
    var ret = {}
    var r = []

    var g = component("grid", "")

    var btn_save = ui_c_btn_(_("cmd_save"), 0, _m("cmd_save"))
    var btn_close = ui_c_btn_(_("cmd_close"), 5, _m("cmd_close"))

    var tc = ui_c_text(_("label_company"))

    var gf = component("grid", "")
    config(gf, "border", _("label_fiscal_year"))
    var ts = component("label", upper(_("_start"), true))
    var te = component("label", upper(_("_end"), true))

    var dfs = setup_default_fiscal_start()
    var ds = create_date_picker(dfs[0], dfs[1])
    config(ds[1], "contents", dfs[2])
    var dfe = setup_default_fiscal_end()
    var de = create_date_picker(dfe[0], dfe[1])
    config(de[1], "contents", dfe[2])

    ui_d_btn_s(ds[2])
    ui_d_btn_s(de[2])

    grid_add(gf, ts, 0, 1, 1, 1, 0.1, 1, 0, 1)
    grid_add(gf, ds[0], 1, 1, 1, 1, 0.9, 1, 1, 1)
    grid_add(gf, te, 2, 1, 1, 1, 0.1, 1, 0, 1)
    grid_add(gf, de[0], 3, 1, 1, 1, 0.9, 1, 1, 1)

    var tbl_coa = component("table", _("table_coa"), true)
    table_right(tbl_coa, 0)
    table_center(tbl_coa, 2)
    var gp = component("grid", "")
    var g_tbl = component("grid", "")
    var b_coa_n = ui_c_btn_(_("cmd_new"), 1, _m("cmd_new"))
    var b_coa_e = ui_c_btn_(_("cmd_edit"), 3, _m("cmd_edit"))
    var b_coa_d = ui_c_btn_(_("cmd_delete"), 2, _m("cmd_delete"))
    var g_btn = component("grid", "")
    grid_add(g_tbl, b_coa_n, 0, 0, 1, 1, 1, 0, 1, 1)
    grid_add(g_tbl, b_coa_e, 0, 1, 1, 1, 1, 0, 1, 1)
    grid_add(g_tbl, b_coa_d, 0, 2, 1, 1, 1, 0, 1, 1)
    grid_add(g_tbl, g_btn, 0, 3, 1, 1, 1, 1, 1, 1)
    grid_add(gp, tbl_coa, 0, 0, 1, 1, 1, 1, 3, 1)
    grid_add(gp, g_tbl,   1, 0, 1, 1, 0, 1, 2, 1)

    grid_add(g, tc[0], 0, 0, 4, 1, 1, 0, 1, 1)
    grid_add(g, gf, 0, 1, 4, 1, 1, 0, 1, 1)
    grid_add(g, gp, 0, 2, 4, 1, 1, 20, 3, 0)
    grid_add(g, btn_close, 1, 3, 1, 1, 1, 0, 0, 2)
    grid_add(g, btn_save, 2, 3, 1, 1, 1, 0, 0, 1)

    setup_load_coa(ctx, tbl_coa)

    event(b_coa_n, fn() {
        var d = setup_account_dialog(ctx, {})
        var r = panel_dialog(d[0], _("title_account_new"), 
            ctx["dialog_width"], ctx["dialog_height"])
        if (r == "OK") {
            var a = [
                get(d[1], "text"),
                get(d[2], "contents"),
                get(d[3], "contents")
            ]
            if (!account_is_valid(a)) {
                message(_("error_account_invalid"), _("title_error"))
            } else {
                var h = {
                    "account_type": account_types_code[a[0]],
                    "code": a[1],
                    "description": a[2]
                }
                if (setup_create_coa(ctx, h) == null) {
                    message(_("error_account_create"), _("title_error"))
                } else {
                    message(_("success_account_create"), _("title_info"))
                }
                setup_load_coa(ctx, tbl_coa)
            }
        }
    })

    event(b_coa_e, fn() {
        var a = get(tbl_coa, "active")
        if (a < 0) {
            message(_("error_account_select"), _("title_info"))
            return a
        }
        var edit = {
            "_account_type": table_get_value(tbl_coa, a, 1),
            "_code": table_get_value(tbl_coa, a, 2),
            "_description": table_get_value(tbl_coa, a, 3)
        }
        var d = setup_account_dialog(ctx, edit)
        var r = panel_dialog(d[0], _("title_account_edit"), 
            ctx["dialog_width"], ctx["dialog_height"])
        if (r == "OK") {
            var aa = [
                get(d[1], "text"),
                get(d[2], "contents"),
                get(d[3], "contents")
            ]
            if (!account_is_valid(aa)) {
                message(_("error_account_invalid"), _("title_error"))
            } else {
                var aid = number(table_get_value(tbl_coa, a, 0))
                var h1 = [
                    ["account_coa_id = ", aid, ""]
                ]
                var h2 = {
                    "account_type": account_types_code[aa[0]],
                    "code": aa[1],
                    "description": aa[2]
                }
                if (setup_update_coa(ctx, h1, h2) == null) {
                    message(_("error_account_update"), _("title_error"))
                } else {
                    message(_("success_account_update"), _("title_info"))
                }
                setup_load_coa(ctx, tbl_coa)
                config(tbl_coa, "active", a)
            }
        }
    })

    event(b_coa_d, fn() {
        var a = get(tbl_coa, "active")
        if (a < 0) {
            message(_("error_account_select"), _("title_info"))
            return a
        }
        var del = {
            "_account_type": table_get_value(tbl_coa, a, 1),
            "_code": table_get_value(tbl_coa, a, 2),
            "_description": table_get_value(tbl_coa, a, 3)
        }
        var detail = account_details(del)
        var r = confirm(_("confirm_account_delete") + lf() + detail, _("title_confirm"))
        if (r == "OK") {
            var aid = number(table_get_value(tbl_coa, a, 0))
            var h = [
                ["account_coa_id = ", aid, ""]
            ]
            if (setup_delete_coa(ctx, h) == null) {
                message(_("error_account_delete"), _("title_error"))
            } else {
                message(_("success_account_delete"), _("title_info"))
            }
            setup_load_coa(ctx, tbl_coa)
        }
    })

    event(btn_save, fn() {
        var _tc = trim(get(tc[1], "contents"))
        if (empty(_tc)) {
            ui_s_text_label(tc, _("error_company_name"), 1)
        } else {
            config(tc[1], "contents", _tc)
            ui_s_text_label(tc, " ", 0)
        }
    })

    event(btn_close, fn() {
        set(ret, "command", "close")
        custom_dialog_close(last(r))
    })

    custom_dialog(g, _("title_setup"), 
        ctx["dialog_width_2"], ctx["dialog_height_2"], 
        false, r)

    return ret
}

